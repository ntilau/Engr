% This script computes some parameters for the bga_ifx_1_4p_lossy problem
close all;
clear all;

f = 2e9;

fTanDeltaLow = 1000000;
fTanDeltaHigh = 10e9;
tanDeltaLow = 0.0095;
tanDeltaHigh = 0.018;

if f < fTanDeltaLow
  tanDelta = tanDeltaLow;
elseif f > fTanDeltaHigh
  tanDelta = tanDeltaHigh;
else
  tanDelta = tanDeltaLow + (f - fTanDeltaLow) * ...
    (tanDeltaHigh - tanDeltaLow) / (fTanDeltaHigh - fTanDeltaLow);
end
tanDelta

fEpsLow = fTanDeltaLow;
fEpsHigh = fTanDeltaHigh;
epsLow = 4.9;
epsHigh = 4.7;

if f < fEpsLow
  epsReal = epsLow;
elseif f > fEpsHigh
  epsReal = epsHigh;
else
  epsReal = epsLow + (f - fEpsLow) * ...
    (epsHigh - epsLow) / (fEpsHigh - fEpsLow);
end
epsReal

epsImag = -tanDelta * epsReal
eps = epsReal + j * epsImag

% tanDeltaTest = (0.0095+0.018)/2
% epsRealTest = 4.8

figure;
fNameWsolver = 'Y:\Ortwin\bga_ifx_1_4p_lossy_portPEC\sParam.txt';
[fr sMatrices] = readSparamWaveSolver(fNameWsolver);
%s11vector = reshape(sMatrices(1,1,:), [length(fr) 1]);
s11vector = reshape(sMatrices(2,2,:), [length(fr) 1]);
plot(fr*1e-9, 20*log10(abs(s11vector)));
hold;

% Matlab m-File from Ansoft
f = zeros(11,1);
S = zeros(11,16);

f = [4000000000 4100000000 4200000000 4300000000 4400000000 4500000000 4600000000 4700000000 4800000000 4900000000 5000000000 ];
S = [
   1.881635E-001 +   -2.429539E-001i,   -1.400220E-001 +   -7.400504E-002i,    1.054335E-002 +    1.348555E-002i,    4.231525E-001 +   -8.249812E-001i,   -1.400220E-001 +   -7.400504E-002i,    1.256715E-001 +   -2.660621E-001i,   -4.830236E-001 +    7.971321E-001i,   -1.201792E-002 +   -7.914205E-003i,    1.054335E-002 +    1.348555E-002i,   -4.830236E-001 +    7.971321E-001i,   -1.669448E-001 +    2.227206E-001i,    1.289606E-001 +    7.596770E-002i,    4.231525E-001 +   -8.249812E-001i,   -1.201792E-002 +   -7.914205E-003i,    1.289606E-001 +    7.596770E-002i,   -7.597487E-002 +    2.813992E-001i;
   1.809160E-001 +   -2.501029E-001i,   -1.429213E-001 +   -6.985155E-002i,    9.684458E-003 +    1.389340E-002i,    3.994247E-001 +   -8.357174E-001i,   -1.429213E-001 +   -6.985155E-002i,    1.179407E-001 +   -2.736449E-001i,   -4.598005E-001 +    8.086746E-001i,   -1.210898E-002 +   -6.461378E-003i,    9.684458E-003 +    1.389340E-002i,   -4.598005E-001 +    8.086746E-001i,   -1.641730E-001 +    2.293225E-001i,    1.316134E-001 +    7.370467E-002i,    3.994247E-001 +   -8.357174E-001i,   -1.210898E-002 +   -6.461378E-003i,    1.316134E-001 +    7.370467E-002i,   -6.948625E-002 +    2.846193E-001i;
   1.724139E-001 +   -2.573017E-001i,   -1.445696E-001 +   -6.466053E-002i,    7.787565E-003 +    1.478658E-002i,    3.748975E-001 +   -8.461626E-001i,   -1.445696E-001 +   -6.466053E-002i,    1.091487E-001 +   -2.828527E-001i,   -4.346291E-001 +    8.196945E-001i,   -1.171426E-002 +   -4.164289E-003i,    7.787565E-003 +    1.478658E-002i,   -4.346291E-001 +    8.196945E-001i,   -1.619467E-001 +    2.371493E-001i,    1.333506E-001 +    7.130829E-002i,    3.748975E-001 +   -8.461626E-001i,   -1.171426E-002 +   -4.164289E-003i,    1.333506E-001 +    7.130829E-002i,   -6.320492E-002 +    2.873026E-001i;
   1.614572E-001 +   -2.644991E-001i,   -1.433936E-001 +   -5.768299E-002i,    3.676796E-003 +    1.704973E-002i,    3.488269E-001 +   -8.566145E-001i,   -1.433936E-001 +   -5.768299E-002i,    9.779940E-002 +   -2.957004E-001i,   -4.054172E-001 +    8.298389E-001i,   -1.006083E-002 +   -1.261742E-004i,    3.676796E-003 +    1.704973E-002i,   -4.054172E-001 +    8.298389E-001i,   -1.608150E-001 +    2.479212E-001i,    1.331878E-001 +    6.901908E-002i,    3.488269E-001 +   -8.566145E-001i,   -1.006083E-002 +   -1.261742E-004i,    1.331878E-001 +    6.901908E-002i,   -5.752757E-002 +    2.890558E-001i;
   1.436782E-001 +   -2.706198E-001i,   -1.330591E-001 +   -4.735299E-002i,   -6.282613E-003 +    2.484508E-002i,    3.182084E-001 +   -8.675950E-001i,   -1.330591E-001 +   -4.735299E-002i,    7.682833E-002 +   -3.184591E-001i,   -3.647053E-001 +    8.361980E-001i,   -3.622309E-003 +    8.358389E-003i,   -6.282613E-003 +    2.484508E-002i,   -3.647053E-001 +    8.361980E-001i,   -1.614726E-001 +    2.683990E-001i,    1.277103E-001 +    6.845654E-002i,    3.182084E-001 +   -8.675950E-001i,   -3.622309E-003 +    8.358389E-003i,    1.277103E-001 +    6.845654E-002i,   -5.420274E-002 +    2.887300E-001i;
   9.829360E-002 +   -2.463057E-001i,    6.709044E-002 +    5.740343E-002i,    2.215600E-002 +   -8.242328E-002i,   -2.620650E-001 +    8.664192E-001i,    6.709044E-002 +    5.740343E-002i,   -2.945439E-002 +   -3.519137E-001i,   -2.826287E-001 +    7.819354E-001i,    4.311837E-002 +    1.912196E-002i,    2.215600E-002 +   -8.242328E-002i,   -2.826287E-001 +    7.819354E-001i,   -1.325720E-001 +    3.431172E-001i,    1.048068E-001 +    9.727466E-002i,   -2.620650E-001 +    8.664192E-001i,    4.311837E-002 +    1.912196E-002i,    1.048068E-001 +    9.727466E-002i,   -6.981438E-002 +    2.885339E-001i;
   1.856901E-001 +   -2.357816E-001i,   -1.814053E-001 +   -1.389820E-001i,    8.592432E-002 +    3.146256E-002i,    2.927350E-001 +   -8.370157E-001i,   -1.814053E-001 +   -1.389820E-001i,    4.774731E-002 +   -1.714717E-001i,   -4.327155E-001 +    7.830821E-001i,   -3.385658E-003 +   -6.412122E-002i,    8.592432E-002 +    3.146256E-002i,   -4.327155E-001 +    7.830821E-001i,   -5.590042E-002 +    2.207107E-001i,    1.888143E-001 +    9.190998E-002i,    2.927350E-001 +   -8.370157E-001i,   -3.385658E-003 +   -6.412122E-002i,    1.888143E-001 +    9.190998E-002i,   -3.852766E-002 +    3.291358E-001i;
   1.672952E-001 +   -2.716278E-001i,   -1.913217E-001 +   -8.957493E-002i,    5.495455E-002 +    8.513356E-003i,    2.699743E-001 +   -8.647881E-001i,   -1.913217E-001 +   -8.957493E-002i,    7.892955E-002 +   -2.290918E-001i,   -3.850126E-001 +    8.412168E-001i,   -2.037830E-002 +   -3.716667E-002i,    5.495455E-002 +    8.513356E-003i,   -3.850126E-001 +    8.412168E-001i,   -9.897311E-002 +    2.251403E-001i,    1.780861E-001 +    6.604132E-002i,    2.699743E-001 +   -8.647881E-001i,   -2.037830E-002 +   -3.716667E-002i,    1.780861E-001 +    6.604132E-002i,   -2.474636E-002 +    3.189145E-001i;
   1.532955E-001 +   -2.839082E-001i,   -1.913720E-001 +   -7.325691E-002i,    4.535701E-002 +    5.666395E-003i,    2.436171E-001 +   -8.759808E-001i,   -1.913720E-001 +   -7.325691E-002i,    7.513848E-002 +   -2.502421E-001i,   -3.510408E-001 +    8.584799E-001i,   -2.223637E-002 +   -2.835488E-002i,    4.535701E-002 +    5.666395E-003i,   -3.510408E-001 +    8.584799E-001i,   -1.060980E-001 +    2.345884E-001i,    1.750579E-001 +    5.846484E-002i,    2.436171E-001 +   -8.759808E-001i,   -2.223637E-002 +   -2.835488E-002i,    1.750579E-001 +    5.846484E-002i,   -1.743359E-002 +    3.175632E-001i;
   1.419031E-001 +   -2.922169E-001i,   -1.924593E-001 +   -6.364224E-002i,    4.142584E-002 +    4.466153E-003i,    2.179019E-001 +   -8.833297E-001i,   -1.924593E-001 +   -6.364224E-002i,    6.817951E-002 +   -2.614888E-001i,   -3.230536E-001 +    8.691569E-001i,   -2.297561E-002 +   -2.416380E-002i,    4.142584E-002 +    4.466153E-003i,   -3.230536E-001 +    8.691569E-001i,   -1.061572E-001 +    2.416420E-001i,    1.749342E-001 +    5.337194E-002i,    2.179019E-001 +   -8.833297E-001i,   -2.297561E-002 +   -2.416380E-002i,    1.749342E-001 +    5.337194E-002i,   -1.047785E-002 +    3.182774E-001i;
   1.314091E-001 +   -2.991666E-001i,   -1.941570E-001 +   -5.622701E-002i,    3.959040E-002 +    3.472021E-003i,    1.924866E-001 +   -8.889314E-001i,   -1.941570E-001 +   -5.622701E-002i,    6.056481E-002 +   -2.689031E-001i,   -2.974442E-001 +    8.774928E-001i,   -2.356443E-002 +   -2.166290E-002i,    3.959040E-002 +    3.472021E-003i,   -2.974442E-001 +    8.774928E-001i,   -1.037531E-001 +    2.473830E-001i,    1.758670E-001 +    4.889941E-002i,    1.924866E-001 +   -8.889314E-001i,   -2.356443E-002 +   -2.166290E-002i,    1.758670E-001 +    4.889941E-002i,   -3.530652E-003 +    3.196572E-001i;
];

plot(f*1e-9, 20*log10(abs(S(:,1))),'rd');


clear all;
D = rand(3,3);
Z = rand(3,3);
Z = Z+Z';
G = zeros(6,6);
G(1:3,4:6) = D;
G(4:6,1:3) = -D';
G(4:6,4:6) = Z;
G
C = zeros(6,4);
C(1:3,1:3) = eye(3);
C(4:6,4) = rand(3,1);
C
C'*G*C
