% Generalized krylov space of n parameters

dim = 40;
numParam = 2;
order = 4;
sysMat = [];

path = 'C:\work\examples\coaxParam\';
mA = MatrixMarketReader(strcat(path, 'mA'));
% mA
mB = MatrixMarketReader(strcat(path, 'mB'));
% mB
% mC = MatrixMarketReader(strcat(path, 'mC'));
% % % mC
% mC = j*mC; 
% mA = rand(dim)+j*rand(dim);
% mB = rand(dim)+j*rand(dim);
% mC = rand(dim)+j*rand(dim);
% sysMat = [mA; mB; mC];

sysMat = {mA; mB};

startVec = vectorReader(strcat(path, 'vb'));
startVecCmplx = vectorReader(strcat(path, 'vb_cmplx'));


startVec = startVec*j;
% test numParam=2 order=2
sys1=sysMat{1};
X'*sys1*X
X'*sys1*sys1*startVec
sys2=sysMat{2};
X'*sys2*sys2*startVec
X'*(sys1*sys2*startVec+sys2*sys1*startVec)
X'*sys2*startVec
X'*sys1*sys1*sys1*startVec
X'*(sys2*(sys1*sys2*startVec+sys2*sys1*startVec)+sys1*sys2*sys2*startVec)

% sys1=getMatrix(sysMat,1,dim);
% X'*sys1*sys1*startVec
% sys2=getMatrix(sysMat,2,dim);
% X'*sys2*sys2*sys2*startVec
% sys3=getMatrix(sysMat,3,dim);
% X'*sys3*sys3*startVec
% X'*(sys1*sys3*sys3+sys3*sys1*sys3+sys3*sys3*sys1)*startVec
% X'*sys2*sys2*sys2*sys2*startVec
% permutMat

% row = [2 0 1];
% findBuildingBlocks(permutMat, row)



% mX_n = MatrixMarketReader(strcat(path, 'mX_pN'));
% mX_n'*sys1*sys2*sys2*startVec

X'*X