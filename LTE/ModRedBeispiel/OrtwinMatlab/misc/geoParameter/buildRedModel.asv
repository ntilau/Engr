% This script builds the ROM
% close all;
% clear all;

modelName = 'C:\work\examples\coaxParam\coaxparam_1e+008_(4,0)_2\';
order = 2;

% read system matrices
sys0 = MatrixMarketReader(strcat(modelName, 'sys0'));
sysMat{1} = MatrixMarketReader(strcat(modelName, 'sys1'));
sysMat{2} = MatrixMarketReader(strcat(modelName, 'sys2'));

rhs0 = vectorReader(strcat(modelName, 'rhs0'));
rhs1 = vectorReader(strcat(modelName, 'rhs1'));

% build factorization of sys0
[fact.L, fact.U, fact.P, fact.Q] = lu(sys0);
sol0 = fact.Q*(fact.U\(fact.L\(fact.P*rhs0)));
sol1 = fact.Q*(fact.U\(fact.L\(fact.P*rhs1)));

K = compGenKrySpaceNparam(sysMat, fact, sol0, order);
K2 = compGenKrySpaceNparam(sysMat, fact, sol1, order);
K = [K, compGenKrySpaceNparam(sysMat, fact, sol1, order)];

clear fact;

% orthogonalization once again: Gram Schmidt
[r c] = size(K);
K(:,1) = K(:,1)/norm(K(:,1));
for k = 2:c
  newVec = K(:,k)-K(:,1:k-1)*(K(:,1:k-1)'*K(:,k));
  K(:,k) = newVec/norm(newVec);
end

% compute projections onto space K
sysMatRed{1} = K'*sys0*K;
clear sys0;
for k = 1:length(sysMat)
  sysMatRed{k+1} = K'*sysMat{k}*K;
  clear sysMat{k};
end
ident = MatrixMarketReader(strcat(modelName, 'ident'));
identRed = K'*ident*K;

lVec0 = vectorReader(strcat(modelName, 'leftVec0'));
lVec1 = vectorReader(strcat(modelName, 'leftVec1'));
lVecRed0 = lVec0.'*K;
lVecRed1 = lVec1.'*K;

redRhs0 = K'*rhs0;
redRhs1 = K'*rhs1;

% save reduced model
writeMatFull(sysMatRed{1}, strcat(modelName, 'sysMatReduced0'));
writeMatFull(sysMatRed{2}, strcat(modelName, 'sysMatReduced1'));
writeMatFull(sysMatRed{3}, strcat(modelName, 'sysMatReduced2'));
writeMatFull(identRed, strcat(modelName, 'identRed'));
writeVector(lVecRed0, strcat(modelName, 'leftVecsRed0'));
writeVector(lVecRed1, strcat(modelName, 'leftVecsRed1'));
writeVector(lVecRed0, strcat(modelName, 'leftVecsRed0'));
writeVector(lVecRed1, strcat(modelName, 'leftVecsRed1'));


% % only for testing
% sysMatRed_ref{1} = readMatFull(strcat(modelName, 'SysMatReduced0_old'));
% sysMatRed_ref{2} = readMatFull(strcat(modelName, 'SysMatReduced1_old'));
% sysMatRed_ref{3} = readMatFull(strcat(modelName, 'SysMatReduced2_old'));
% 
% for k = 1:length(sysMatRed_ref)
%   sysMatReduced{k}-sysMatRed_ref{k}
% end

