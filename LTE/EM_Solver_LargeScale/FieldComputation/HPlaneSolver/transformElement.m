function [detJ, gradEtaSqr, gradEtaGradZeta, gradZetaSqr] = ...
    transformElement(elPos)


% calculate determinante of jacobian
detJ = abs(elPos(1,2) * elPos(3,1) - elPos(1,2) * elPos(2,1) - ...
    elPos(1,1) * elPos(3,2) + elPos(1,1) * elPos(2,2) + ...
    elPos(2,1) * elPos(3,2) - elPos(3,1) * elPos(2,2));

% calculate gradients of local coordinates (proportional to 1/(detJ^2))
gradEtaSqr = elPos(1,2) ^ 2 - 2 * elPos(1,2) * elPos(3,2) + ...
    elPos(3,2) ^ 2 + elPos(1,1) ^ 2 - ...
    2 * elPos(1,1) * elPos(3,1) + elPos(3,1) ^ 2;
gradEtaGradZeta = elPos(2,2) * elPos(1,2) - elPos(2,2) * ...
    elPos(3,2) - elPos(1,2) ^ 2 + elPos(1,2) * elPos(3,2) -...
    elPos(1,1) ^ 2 + elPos(1,1) * elPos(3,1) + elPos(2,1) *...
    elPos(1,1) - elPos(2,1) * elPos(3,1);
gradZetaSqr = elPos(2,2) ^ 2 - 2 * elPos(2,2) * elPos(1,2) + ...
    elPos(1,2) ^ 2 + elPos(1,1) ^ 2 - ...
    2 * elPos(2,1) * elPos(1,1) + elPos(2,1) ^ 2;