function [portModes] = getPortModes(xy, PO, Np, nmode, plane, nord)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% function call
%  [portModes] = getPortModes(xy, PO, Np, nmode, plane, nord)
%
% input paramter
%    xy: coordinates of nodes
%    PO: position of port nodes
%    Np: number of ports
%    nmode: number of modes on port
%    plane: E- or H-plane formulation
%    nord: order of basis function
%
% output paramter
%    portModes: matrix with coefficient row vectors of port modes
%
% modified by: O. Farle, M. Loesch
% modified on: 09.11.2007
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% number of port nodes
MAXPO=size(PO,1);

% read out number of elements in PO
lenPO = [PO(MAXPO, 1), PO(MAXPO, 2)];

if (nord ~= 1)
    error('order of basis function on port is not equal to 1')
end

if (plane == 'E')
    error('not implemented');
else % H-plane
    for ip=1:Np
        % get min and max of ports y coordinate
        yyMin = xy(2, PO(1, ip));
        yyMax = xy(2, PO(lenPO(ip), ip));
        % get y coordinats of nodes on current port
        yy = xy(2, PO(1:lenPO(ip), ip));
        for m=1:nmode
            mCount = (ip - 1) * nmode + m;
            portModes(mCount, :) = sin(m * (yy - yyMin) * 2 * pi / (yyMax-yyMin));
        end
    end
end